from aiogram import Router, F

from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery
from aiogram.utils.deep_linking import create_start_link

from infrastructure.database.db_working import UserWorking
from tgbot.keyboards.inline.main_profile.details_kb import profile_dop_section
from tgbot.keyboards.inline.main_profile.partner.partners_kb import partner_dop_section

dop_router = Router()


class states(StatesGroup):
    generation_photo = State()


@dop_router.callback_query(F.data == '_partner_prog')
async def choosing_neuro_to_txtimg(call: CallbackQuery, state: FSMContext):
    await call.answer()
    user = await UserWorking.get_user(call.from_user.id)
    text = f"""–í –Ω–∞—à–µ–º –±–æ—Ç–µ –≤–∫–ª—é—á–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤. –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –Ω–∞ —ç—Ç–æ–º!
–ß–µ–º –±–æ–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –í–∞—à–µ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ - —Ç–µ–º –±–æ–ª—å—à–µ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å!

–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:

–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞: {user.referral_balance} ‚ÇΩ
–ü—Ä–∏–≤–µ–¥–µ–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: -
"""
    await call.message.edit_text(text=text,
                                 reply_markup=partner_dop_section())


@dop_router.callback_query(F.data == 'back_in_profile')
async def back_button(call: CallbackQuery):
    await call.answer()
    user = await UserWorking.get_user(call.from_user.id)
    start_link = await create_start_link(call.bot, str(call.from_user.id))
    t = f'*–ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏:* {user.date}\n' if user.date else ""
    text = f"""     üë§ *–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å* `{user.username}`\n
*–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä:* `{user.user_id}`\n

üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
{t}
*–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å:* `{user.referral_balance}`

*–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:* \n`{start_link}`
                    """
    await call.message.edit_text(text=text, parse_mode="Markdown",
                                 reply_markup=profile_dop_section())
